Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4








# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        #We are given 2 linked lists and then we have to sort them and make a new linked list
        head = ListNode(0)
        ptr = head

        while l1 or l2:
            if l1 is None:
                ptr.next = l2
                break
            elif l2 is None:
                ptr.next = l1
                break
            else:
                smallerVal = 0
                if l1.val<l2.val:
                    smallerVal = l1.val
                    l1 = l1.next
                else:
                    smallerVal = l2.val
                    l2 = l2.next
                newNode = ListNode(smallerVal)
                ptr.next = newNode
                ptr = ptr.next

        return head.next
            
        
                
                

        
